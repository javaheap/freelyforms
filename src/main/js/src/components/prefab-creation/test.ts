/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/formdata": {
    /** getAllFormData */
    get: operations["getAllFormDataUsingGET"];
    /** deleteFormData */
    delete: operations["deleteFormDataUsingDELETE"];
  };
  "/api/formdata/{prefab}": {
    /** getAllFormDataFromPrefab */
    get: operations["getAllFormDataFromPrefabUsingGET"];
    /** patchFormData */
    put: operations["patchFormDataUsingPUT"];
    /** postFormData */
    post: operations["postFormDataUsingPOST"];
    /** patchFormData */
    patch: operations["patchFormDataUsingPATCH"];
  };
  "/api/formdata/{prefab}/{group}/{field}": {
    /** getAllFormDataFromPrefabField */
    get: operations["getAllFormDataFromPrefabFieldUsingGET"];
  };
  "/api/prefabs": {
    /** getAllPrefabs */
    get: operations["getAllPrefabsUsingGET"];
    /** postPrefab */
    post: operations["postPrefabUsingPOST"];
  };
  "/api/prefabs/{name}": {
    /** getPrefab */
    get: operations["getPrefabUsingGET"];
    /** patchPrefab */
    put: operations["patchPrefabUsingPUT"];
    /** deletePrefab */
    delete: operations["deletePrefabUsingDELETE"];
    /** patchPrefab */
    patch: operations["patchPrefabUsingPATCH"];
  };
  "/api/users": {
    /** saveUser */
    post: operations["saveUserUsingPOST"];
  };
  "/api/users/{id}": {
    /** getUser */
    get: operations["getUserUsingGET"];
    /** deleteUser */
    delete: operations["deleteUserUsingDELETE"];
  };
  "/error": {
    /** error */
    get: operations["errorUsingGET"];
    /** error */
    put: operations["errorUsingPUT"];
    /** error */
    post: operations["errorUsingPOST"];
    /** error */
    delete: operations["errorUsingDELETE"];
    /** error */
    options: operations["errorUsingOPTIONS"];
    /** error */
    head: operations["errorUsingHEAD"];
    /** error */
    patch: operations["errorUsingPATCH"];
  };
  "/v3/api-docs": {
    /** openapiJson */
    get: operations["openapiJsonUsingGET"];
  };
  "/v3/api-docs.yaml": {
    /** openapiYaml */
    get: operations["openapiYamlUsingGET"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Field: {
      caption?: string;
      label?: string;
      name?: string;
      rules?: components["schemas"]["Rule"];
    };
    FormData: {
      _id?: components["schemas"]["ObjectId"];
      groups?: components["schemas"]["Group"][];
      prefabName?: string;
    };
    Group: {
      caption?: string;
      fields?: components["schemas"]["Field"][];
      label?: string;
      name?: string;
    };
    ModelAndView: {
      empty?: boolean;
      model?: Record<string, never>;
      modelMap?: {
        [key: string]: Record<string, never>;
      };
      reference?: boolean;
      /** @enum {string} */
      status?: "100 CONTINUE" | "101 SWITCHING_PROTOCOLS" | "102 PROCESSING" | "103 CHECKPOINT" | "200 OK" | "201 CREATED" | "202 ACCEPTED" | "203 NON_AUTHORITATIVE_INFORMATION" | "204 NO_CONTENT" | "205 RESET_CONTENT" | "206 PARTIAL_CONTENT" | "207 MULTI_STATUS" | "208 ALREADY_REPORTED" | "226 IM_USED" | "300 MULTIPLE_CHOICES" | "301 MOVED_PERMANENTLY" | "302 FOUND" | "302 MOVED_TEMPORARILY" | "303 SEE_OTHER" | "304 NOT_MODIFIED" | "305 USE_PROXY" | "307 TEMPORARY_REDIRECT" | "308 PERMANENT_REDIRECT" | "400 BAD_REQUEST" | "401 UNAUTHORIZED" | "402 PAYMENT_REQUIRED" | "403 FORBIDDEN" | "404 NOT_FOUND" | "405 METHOD_NOT_ALLOWED" | "406 NOT_ACCEPTABLE" | "407 PROXY_AUTHENTICATION_REQUIRED" | "408 REQUEST_TIMEOUT" | "409 CONFLICT" | "410 GONE" | "411 LENGTH_REQUIRED" | "412 PRECONDITION_FAILED" | "413 PAYLOAD_TOO_LARGE" | "413 REQUEST_ENTITY_TOO_LARGE" | "414 URI_TOO_LONG" | "414 REQUEST_URI_TOO_LONG" | "415 UNSUPPORTED_MEDIA_TYPE" | "416 REQUESTED_RANGE_NOT_SATISFIABLE" | "417 EXPECTATION_FAILED" | "418 I_AM_A_TEAPOT" | "419 INSUFFICIENT_SPACE_ON_RESOURCE" | "420 METHOD_FAILURE" | "421 DESTINATION_LOCKED" | "422 UNPROCESSABLE_ENTITY" | "423 LOCKED" | "424 FAILED_DEPENDENCY" | "425 TOO_EARLY" | "426 UPGRADE_REQUIRED" | "428 PRECONDITION_REQUIRED" | "429 TOO_MANY_REQUESTS" | "431 REQUEST_HEADER_FIELDS_TOO_LARGE" | "451 UNAVAILABLE_FOR_LEGAL_REASONS" | "500 INTERNAL_SERVER_ERROR" | "501 NOT_IMPLEMENTED" | "502 BAD_GATEWAY" | "503 SERVICE_UNAVAILABLE" | "504 GATEWAY_TIMEOUT" | "505 HTTP_VERSION_NOT_SUPPORTED" | "506 VARIANT_ALSO_NEGOTIATES" | "507 INSUFFICIENT_STORAGE" | "508 LOOP_DETECTED" | "509 BANDWIDTH_LIMIT_EXCEEDED" | "510 NOT_EXTENDED" | "511 NETWORK_AUTHENTICATION_REQUIRED";
      view?: components["schemas"]["View"];
      viewName?: string;
    };
    ObjectId: {
      /** Format: date-time */
      date?: string;
      /** Format: int32 */
      timestamp?: number;
    };
    Prefab: {
      _id?: components["schemas"]["ObjectId"];
      caption?: string;
      groups?: components["schemas"]["Group"][];
      label?: string;
      name?: string;
    };
    Rule: {
      excludes?: string[];
      /** @enum {string} */
      fieldType?: "INTEGER" | "STRING" | "FLOAT" | "DATE" | "DATETIME" | "BOOLEAN" | "SELECTOR";
      hidden?: boolean;
      optional?: boolean;
      selectorValues?: string[];
      typeRules?: components["schemas"]["TypeRule"][];
    };
    TypeRule: {
      associatedTypes?: ("INTEGER" | "STRING" | "FLOAT" | "DATE" | "DATETIME" | "BOOLEAN" | "SELECTOR")[];
      name?: string;
      value?: string;
    };
    User: {
      /** Format: int64 */
      age?: number;
      firstname?: string;
      id?: string;
      lastname?: string;
    };
    View: {
      contentType?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** getAllFormData */
  getAllFormDataUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["FormData"][];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
      /** @description Not Found */
      404: {
        content: {
        };
      };
    };
  };
  /** deleteFormData */
  deleteFormDataUsingDELETE: {
    /** @description formDataId */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ObjectId"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
      /** @description No Content */
      204: {
        content: {
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
    };
  };
  /** getAllFormDataFromPrefab */
  getAllFormDataFromPrefabUsingGET: {
    parameters: {
      path: {
        /** @description prefab */
        prefab: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["FormData"][];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
      /** @description Not Found */
      404: {
        content: {
        };
      };
    };
  };
  /** patchFormData */
  patchFormDataUsingPUT: {
    /** @description formData */
    requestBody: {
      content: {
        "application/json": components["schemas"]["FormData"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
      /** @description Created */
      201: {
        content: {
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
      /** @description Not Found */
      404: {
        content: {
        };
      };
    };
  };
  /** postFormData */
  postFormDataUsingPOST: {
    /** @description formData */
    requestBody: {
      content: {
        "application/json": components["schemas"]["FormData"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
      /** @description Created */
      201: {
        content: {
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
      /** @description Not Found */
      404: {
        content: {
        };
      };
    };
  };
  /** patchFormData */
  patchFormDataUsingPATCH: {
    /** @description formData */
    requestBody: {
      content: {
        "application/json": components["schemas"]["FormData"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
      /** @description No Content */
      204: {
        content: {
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
    };
  };
  /** getAllFormDataFromPrefabField */
  getAllFormDataFromPrefabFieldUsingGET: {
    parameters: {
      path: {
        /** @description prefab */
        prefab: string;
        /** @description group */
        group: string;
        /** @description field */
        field: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>[];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
      /** @description Not Found */
      404: {
        content: {
        };
      };
    };
  };
  /** getAllPrefabs */
  getAllPrefabsUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["Prefab"][];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
      /** @description Not Found */
      404: {
        content: {
        };
      };
    };
  };
  /** postPrefab */
  postPrefabUsingPOST: {
    /** @description newPrefab */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Prefab"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
      /** @description Created */
      201: {
        content: {
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
      /** @description Not Found */
      404: {
        content: {
        };
      };
    };
  };
  /** getPrefab */
  getPrefabUsingGET: {
    parameters: {
      path: {
        /** @description name */
        name: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["Prefab"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
      /** @description Not Found */
      404: {
        content: {
        };
      };
    };
  };
  /** patchPrefab */
  patchPrefabUsingPUT: {
    parameters: {
      path: {
        /** @description name */
        name: string;
      };
    };
    /** @description patchedPrefab */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Prefab"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
      /** @description Created */
      201: {
        content: {
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
      /** @description Not Found */
      404: {
        content: {
        };
      };
    };
  };
  /** deletePrefab */
  deletePrefabUsingDELETE: {
    parameters: {
      path: {
        /** @description name */
        name: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
      /** @description No Content */
      204: {
        content: {
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
    };
  };
  /** patchPrefab */
  patchPrefabUsingPATCH: {
    parameters: {
      path: {
        /** @description name */
        name: string;
      };
    };
    /** @description patchedPrefab */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Prefab"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
      /** @description No Content */
      204: {
        content: {
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
    };
  };
  /** saveUser */
  saveUserUsingPOST: {
    /** @description user */
    requestBody: {
      content: {
        "application/json": components["schemas"]["User"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["User"];
        };
      };
      /** @description Created */
      201: {
        content: {
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
      /** @description Not Found */
      404: {
        content: {
        };
      };
    };
  };
  /** getUser */
  getUserUsingGET: {
    parameters: {
      path: {
        /** @description id */
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["User"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
      /** @description Not Found */
      404: {
        content: {
        };
      };
    };
  };
  /** deleteUser */
  deleteUserUsingDELETE: {
    parameters: {
      path: {
        /** @description id */
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
      /** @description No Content */
      204: {
        content: {
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
    };
  };
  /** error */
  errorUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
      /** @description Not Found */
      404: {
        content: {
        };
      };
    };
  };
  /** error */
  errorUsingPUT: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description Created */
      201: {
        content: {
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
      /** @description Not Found */
      404: {
        content: {
        };
      };
    };
  };
  /** error */
  errorUsingPOST: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description Created */
      201: {
        content: {
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
      /** @description Not Found */
      404: {
        content: {
        };
      };
    };
  };
  /** error */
  errorUsingDELETE: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description No Content */
      204: {
        content: {
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
    };
  };
  /** error */
  errorUsingOPTIONS: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description No Content */
      204: {
        content: {
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
    };
  };
  /** error */
  errorUsingHEAD: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description No Content */
      204: {
        content: {
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
    };
  };
  /** error */
  errorUsingPATCH: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description No Content */
      204: {
        content: {
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
    };
  };
  /** openapiJson */
  openapiJsonUsingGET: {
    /** @description apiDocsUrl */
    requestBody?: {
      content: {
        "application/json": string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
      /** @description Not Found */
      404: {
        content: {
        };
      };
    };
  };
  /** openapiYaml */
  openapiYamlUsingGET: {
    /** @description apiDocsUrl */
    requestBody?: {
      content: {
        "application/json": string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/vnd.oai.openapi": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
        };
      };
      /** @description Forbidden */
      403: {
        content: {
        };
      };
      /** @description Not Found */
      404: {
        content: {
        };
      };
    };
  };
}
